<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="22" hostname="Pooja" failures="0" tests="1" name="Default test" time="0.254" errors="0" timestamp="2020-08-21T09:13:05 IST">
  <testcase classname="test.BaseCases" name="@BeforeMethod Setup" time="-1.597981384688E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated Setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated Setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:437)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:351)
at org.testng.internal.Parameters.createParameters(Parameters.java:708)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:299)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:700)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:527)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1510)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod Setup -->
  <testcase classname="test.BaseCases" name="@AfterMethod close" time="-1.597981384787E9">
    <skipped/>
  </testcase> <!-- @AfterMethod close -->
  <testcase classname="test.TestCase" name="TestCase6" time="0.0">
    <skipped/>
  </testcase> <!-- TestCase6 -->
  <testcase classname="test.TestCase" name="TestCase21" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase21 -->
  <testcase classname="test.TestCase" name="TestCase1" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase1 -->
  <testcase classname="test.TestCase" name="TestCase10" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase10 -->
  <testcase classname="test.TestCase" name="Testcase15" time="0.0">
    <ignored/>
  </testcase> <!-- Testcase15 -->
  <testcase classname="test.TestCase" name="TestCase3" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase3 -->
  <testcase classname="test.TestCase" name="Testcase14" time="0.0">
    <ignored/>
  </testcase> <!-- Testcase14 -->
  <testcase classname="test.TestCase" name="TestCase9" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase9 -->
  <testcase classname="test.TestCase" name="TestCase18" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase18 -->
  <testcase classname="test.TestCase" name="TestCase13" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase13 -->
  <testcase classname="test.TestCase" name="TestCase8" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase8 -->
  <testcase classname="test.TestCase" name="TestCase16" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase16 -->
  <testcase classname="test.TestCase" name="TestCase11" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase11 -->
  <testcase classname="test.TestCase" name="TestCase2" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase2 -->
  <testcase classname="test.TestCase" name="TestCase5" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase5 -->
  <testcase classname="test.TestCase" name="TestCase22" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase22 -->
  <testcase classname="test.TestCase" name="TestCase4" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase4 -->
  <testcase classname="test.TestCase" name="TestCase7" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase7 -->
  <testcase classname="test.TestCase" name="TestCase20" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase20 -->
  <testcase classname="test.TestCase" name="TestCase12" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase12 -->
  <testcase classname="test.TestCase" name="method" time="0.0">
    <ignored/>
  </testcase> <!-- method -->
  <testcase classname="test.TestCase" name="TestCase19" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase19 -->
  <testcase classname="test.TestCase" name="TestCase17" time="0.0">
    <ignored/>
  </testcase> <!-- TestCase17 -->
</testsuite> <!-- Default test -->
